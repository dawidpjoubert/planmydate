from django import forms
from .models import CardioLevelField, PriceRatingField, IntimateField, BookingRequiredField, YesNoField, TimeOfDayField



class CriteriaForm(forms.Form):
    blank_choice = ((None, 'Any'),)

    # HARD CODED HACK!!! - PUT SQL AND PULL THIS FROM THE districtlatlng table!!!
    area_choices = (
        ("EC1", "Aldersgate, Finsbury, Holborn, EC1"),
        ("EC2", "Bishopsgate, Cheapside, EC2"),
        ("EC3", "Aldgate, EC3"),
        ("EC4", "St. Paul’s, EC4"),
        ("E1", "Whitechapel, Shoreditch, E1"),
        ("E2", "Bethnal Green, E2"),
        ("E3", "Bow, E3"),
        ("E4", "Chingford, E4"),
        ("E5", "Clapton, Homerton, E5"),
        ("E6", "East Ham, E6"),
        ("E7", "Forest Gate, E7"),
        ("E8", "Dalston, E8"),
        ("E9", "Homerton, E9"),
        ("E10", "Leyton, E10"),
        ("E11", "Leytonstone, E11"),
        ("E12", "Manor Park, E12"),
        ("E13", "Plaistow, E13"),
        ("E14", "Poplar (Isle of Dogs), E14"),
        ("E15", "Stratford, West Ham, E15"),
        ("E16", "Victoria Docks, North Woolwich, E16"),
        ("E17", "Walthamstow, E17"),
        ("E18", "South Woodford, E18"),
        ("NW1", "Regent’s Park, St. Pancras, NW1"),
        ("NW2", "Cricklewood, Dollis Hill, NW2"),
        ("NW3", "Hampstead, NW3"),
        ("NW4", "Hendon, NW4"),
        ("NW5", "Kentish Town, NW5"),
        ("NW6", "Maida Vale, Kilburn, NW6"),
        ("NW7", "Mill Hill, NW7"),
        ("NW8", "St. John’s Wood, NW8"),
        ("NW9", "Colindale, NW9"),
        ("NW10", "Willesden, NW10"),
        ("NW11", "Golders Green, NW11"),
        ("SE1", "Borough, Waterloo, SE1"),
        ("SE2", "Abbey Wood, SE2"),
        ("SE3", "Blackheath, SE3"),
        ("SE4", "Brockley, SE4"),
        ("SE5", "Camberwell, SE5"),
        ("SE6", "Catford, SE6"),
        ("SE7", "Charlton, SE7"),
        ("SE8", "Deptford, SE8"),
        ("SE9", "Eltham, SE9"),
        ("SE10", "Greenwich, SE10"),
        ("SE11", "Kennington, SE11"),
        ("SE12", "Lee, SE12"),
        ("SE13", "Lewisham, SE13"),
        ("SE14", "New Cross, SE14"),
        ("SE15", "Peckham, SE15"),
        ("SE16", "ermondsey, Rotherhithe, SE16"),
        ("SE17", "Walworth, SE17"),
        ("SE18", "Plumstead, SE18"),
        ("SE19", "Crystal Palace, SE19"),
        ("SE20", "Penge, SE20"),
        ("SE21", "Dulwich, SE21 & SE22"),
        ("SE23", "Forest Hill, SE23"),
        ("SE24", "Herne Hill, SE24"),
        ("SE25", "Norwood, SE25"),
        ("SE26", "Sydenham, SE26"),
        ("SE27", "West Norwood, SE27"),
        ("SE28", "Thamesmead, SE28"),
        ("WC1", "Bloomsbury, High Holborn, WC1"),
        ("WC2", "Strand, Holborn, WC2"),
        ("W1", "West End, W1"),
        ("W2", "Bayswater, Paddington, W2"),
        ("W3", "Acton, W3"),
        ("W4", "Chiswick, W4"),
        ("W5", "Ealing, W5"),
        ("W6", "Hammersmith, W6"),
        ("W7", "Hanwell, W7"),
        ("W8", "Holland Park, W8"),
        ("W9", "Maida Vale, Paddington, W9"),
        ("W10", "North Kensington, W10"),
        ("W11", "Notting Hill, W11"),
        ("W12", "Shepherd’s Bush, W12"),
        ("W13", "West Ealing, W13"),
        ("W14", "West Kensington, W14"),
        ("N1", "Angel, N1"),
        ("N2", "East Finchley, N2"),
        ("N3", "Finchley, N3"),
        ("N4", "Finsbury Park, N4"),
        ("N5", "Highbury, N5"),
        ("N6", "Highgate, N6"),
        ("N7", "Holloway, N7"),
        ("N8", "Hornsey, Crouch End, N8"),
        ("N9", "Lower Edmonton, N9"),
        ("N10", "Muswell Hill, N10"),
        ("N11", "New Southgate, N11"),
        ("N12", "North Finchley, N12"),
        ("N13", "Palmers Green, N13"),
        ("N14", "Southgate, N14"),
        ("N15", "Stamford Hill, South Tottenham, N15"),
        ("N16", "Stoke Newington, N16"),
        ("N17", "Tottenham, N17"),
        ("N18", "Upper Edmonton, N18"),
        ("N19", "Upper Holloway, N19"),
        ("N20", "Whetstone, N20"),
        ("N21", "Winchmore Hill, N21"),
        ("N22", "Wood Green, N22"),
        ("SW1", "Westminster, Victoria, SW1"),
        ("SW2", "Brixton, SW2"),
        ("SW3", "Chelsea, SW3"),
        ("SW4", "Clapham, SW4"),
        ("SW5", "Earl’s Court, West Brompton, SW5"),
        ("SW6", "Fulham, SW6"),
        ("SW7", "South Kensington, Knightsbridge, SW7"),
        ("SW8", "South Lambeth, SW8"),
        ("SW9", "Stockwell, SW9"),
        ("SW10", "West Brompton, Chelsea, SW10"),
        ("SW11", "Battersea, SW11"),
        ("SW12", "Balham, SW12"),
        ("SW13", "Barnes, SW13"),
        ("SW14", "Mortlake, SW14"),
        ("SW15", "Putney, SW15"),
        ("SW16", "Streatham, SW16"),
        ("SW17", "Tooting, SW17"),
        ("SW18", "West Wandsworth, SW18"),
        ("SW19", "Wimbledon, SW19"),
        ("SW20", "West Wimbledon, SW20"),
    )

    area_choices_data = dict(area_choices)

    area = forms.CharField(widget=forms.Select(attrs={'placeholder': 'Area or London Postcode'}, choices=blank_choice + area_choices), label='Area')
    # area = forms.CharField(widget=forms.TextInput(attrs={'placeholder': 'Type a post code or area name to find a district', 'class': 'typeahead'}, ))
    # area = forms.CharField(
    #     widget=TypeaheadInput(
    #         options={
    #           'hint': True,
    #           'highlight': True,
    #           'minLength': 1
    #         },
    #         datasets={
    #           'name': 'area_choices_data',
    #           'source': 'substringMatcher(area_choices_data)',
    #         },
    #         attrs = {'placeholder': 'Type a post code or area name to find a district'},
    #     )
    # )
    is_outdoor = forms.ChoiceField(choices=blank_choice + YesNoField.OPTION_CHOICES, label='Outdoors', required=False)
    time_of_day = forms.ChoiceField(choices=blank_choice + TimeOfDayField.TOD_CHOICES, label='Day / Night', required=False)
    price_rating = forms.ChoiceField(choices=blank_choice + PriceRatingField.PRICE_CHOICES, label="Budget", required=False)
    cardio = forms.ChoiceField(choices=blank_choice + CardioLevelField.LEVEL_CHOICES, label="Max Energy", required=False)
    intimate = forms.ChoiceField(choices=blank_choice + IntimateField.INTIMATE_CHOICES, label="Max Intimacy", required=False)

